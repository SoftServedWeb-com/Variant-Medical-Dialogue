// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Severity {
  LOW
  MODERATE
  SEVERE
  CRITICAL
}

enum AppointmentStatus {
  PENDING
  CONFIRMED
  RESCHEDULED
  REJECTED
}

enum UserRole {
  DOCTOR
  ADMIN
}

model User {
  id       String   @id @default(cuid())
  email    String   @unique
  password String
  role     UserRole
  doctor   Doctor?
}

model Doctor {
  id           String               @id @default(cuid())
  user         User                 @relation(fields: [userId], references: [id])
  userId       String               @unique
  name         String
  speciality   String
  patients     Patient[]
  appointments Appointment[]
  availability DoctorAvailability[]
}

model DoctorAvailability {
  id        String @id @default(cuid())
  doctor    Doctor @relation(fields: [doctorId], references: [id])
  doctorId  String
  dayOfWeek Int // 0-6, where 0 is Sunday
  startTime String // Format: "HH:mm"
  endTime   String // Format: "HH:mm"
}

model Patient {
  id               String        @id @default(cuid())
  name             String
  email            String
  phone            String
  dateOfBirth      DateTime
  age              Int
  appointments     Appointment[]
  lastVisitOn      DateTime?
  numberOfVisits   Int           @default(0)
  chronicCondition String?
  nextVisitOn      DateTime?
  doctor           Doctor        @relation(fields: [doctorId], references: [id])
  doctorId         String
}

model Appointment {
  id            String            @id @default(cuid())
  patient       Patient           @relation(fields: [patientId], references: [id])
  patientId     String
  doctor        Doctor            @relation(fields: [doctorId], references: [id])
  doctorId      String
  condition     String
  severity      Severity
  status        AppointmentStatus
  date          DateTime
  duration      Int               @default(30) // Duration in minutes
  transcription Transcription?
  icd10Codes    ICD10Code[]
}

model Transcription {
  id            String      @id @default(cuid())
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId String      @unique
  content       String
  createdAt     DateTime    @default(now())
}

model ICD10Code {
  code          String      @unique
  description   String
  severity      Severity
  appointment   Appointment @relation(fields: [appointmentId], references: [id])
  appointmentId String
}